package v1.t0;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class T37Test {

    T37 t;

    @BeforeEach
    void setUp() {
        t = new T37();
    }

    @Test
    void test_1() {
        char[][] board = {
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}};
        t.solveSudoku(board);

        for (char[] chars : board) {
            System.out.println(Arrays.toString(chars));
        }

    }

    @Test
    void test_2() {
        char[][] board = {
                {'.', '.', '9', '7', '4', '8', '.', '.', '.'},
                {'7', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '2', '.', '1', '.', '9', '.', '.', '.'},
                {'.', '.', '7', '.', '.', '.', '2', '4', '.'},
                {'.', '6', '4', '.', '1', '.', '5', '9', '.'},
                {'.', '9', '8', '.', '.', '.', '3', '.', '.'},
                {'.', '.', '.', '8', '.', '3', '.', '2', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '6'},
                {'.', '.', '.', '2', '7', '5', '9', '.', '.'}};
        t.solveSudoku(board);

        for (char[] chars : board) {
            System.out.println(Arrays.toString(chars));
        }

    }

    @Test
    void test_3() {
        char[][] board = {
                {'.', '.', '.', '.', '.', '7', '.', '.', '9'},
                {'.', '4', '.', '.', '8', '1', '2', '.', '.'},
                {'.', '.', '.', '9', '.', '.', '.', '1', '.'},
                {'.', '.', '5', '3', '.', '.', '.', '7', '2'},
                {'2', '9', '3', '.', '.', '.', '.', '5', '.'},
                {'.', '.', '.', '.', '.', '5', '3', '.', '.'},
                {'8', '.', '.', '.', '2', '3', '.', '.', '.'},
                {'7', '.', '.', '.', '5', '.', '.', '4', '.'},
                {'5', '3', '1', '.', '7', '.', '.', '.', '.'}};
        t.solveSudoku(board);

        for (char[] chars : board) {
            System.out.println(Arrays.toString(chars));
        }

    }
}